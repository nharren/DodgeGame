/** Represents a platform */
class Platform {
  field int _leftGap;
  field int _rightGap;
  field int _row;

  /** Constructs the platform */
  constructor Platform new() {
    let _leftGap = 0;
    let _rightGap = 0;
    let _row = 0;
    return this;
  }

  /** Disposes the platform */
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

  /** Gets the left gap */
  method int getLeftGap() {
    return _leftGap;
  } 

  /** Sets the left gap */
  method void setLeftGap(int leftGap) {
    let _leftGap = leftGap;
    return;
  } 

  /** Gets the right gap */
  method int getRightGap() {
    return _rightGap;
  } 

  /** Sets the right gap */
  method void setRightGap(int rightGap) {
    let _rightGap = rightGap;
    return;
  } 

  /** Gets the row */
  method int getRow() {
    return _row;
  } 

  /** Sets the row */
  method void setRow(int row) {
    let _row = row;
    return;
  }
}
